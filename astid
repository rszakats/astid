#!/bin/bash

set -eE -o functrace
failure() {
  local lineno=$1
  local msg=$2
  echo "Failed at line $lineno: $msg"
}
trap 'failure ${LINENO} "$BASH_COMMAND" ; exit 1' ERR

##################################################################
# Checks the availability of the used commands
red="\033[1;31m\e[5m"
green="\033[1;32m"
yellow="\e[33m"
normal="\033[0m"
bold='\033[1m'

check_command () {
   args=($@)
   command -v "${args[0]}" >/dev/null 2>&1 || { echo -e >&2 "${red}Error! The script requires ${bold}${green}"${args[0]}"${normal}${red} but it's not installed. Aborting.${normal}"; exit 1; }
}
export -f check_command
##################################################################
externals="wget zcat gzip awk column"
for  ext in ${externals};do
    check_command ${ext}
done

if [ -z "${1}" ];then
  echo -e "${red}Missing argument!${normal} Please provide an asteroid name or provisional designation!\nPlease use \"\" in case of provisinal designations!\n"\
  "E.g.:\nastid Ceres\nastid \"2021 CS10\""
  exit 1
fi

header="Des'n     H     G   Epoch     M        Peri.      Node       Incl.       e            n           a      U Reference #Obs #Opp    Arc    rms  Perts   Computer   flag Designation                 Date    "
tdir="/tmp/${USER}"
link="https://www.minorplanetcenter.net/iau/MPCORB/MPCORB.DAT.gz"
datafile="MPCORB.DAT"

mkdir -p ${tdir}
mkdir -p "/home/${USER}/.cache/"

if [ ! -f "/home/${USER}/.cache/${datafile}.gz" ];then
    echo "Downloading ${datafile}."
    wget -q ${link} -O ${tdir}/${datafile}.gz
    echo "${header}" > ${tdir}/${datafile}
    zcat /tmp/rszakats/MPCORB.DAT.gz | awk 'NR>43{print $0}' >> ${tdir}/${datafile}
    gzip -c ${tdir}/${datafile} > /home/${USER}/.cache/${datafile}.gz
fi

if [[ "$1" =~ ^[0-9]+$ || "$1" =~ ^[-][0-9]+$  ]]
then
    target="(${1})"
else
    target=" ${1}"
fi

awk -v aname="$1" -v header="${header}" '
BEGIN { 
   # FIELDWIDTHS="9 6 5 6 11 11 11 11 10 12 2 9 4 9 6 5 10 5 8 11 5 28 8"
  FIELDWIDTHS="8 7 5 6 11 11 11 11 10 12 12 2 11 5 4 10 5 9 8 8 28 8" 
  n=split(header, headers)
}

NR == 1 {
  for (i=1; i<=NF; i++) {
    gsub(/ /, "", $i)  # Remove spaces from header names
    f[$i] = i
  }
}

NR > 1 {
  for (i=0; i<NF; i++) {
    fields[NR][i] = $(i+1)
    print headers[i+1]": "fields[NR][i] 
  }
  print "-----------------------"
}

' <<< $(echo "${header}" &&zcat "/home/${USER}/.cache/${datafile}.gz" |  grep -i "${target}") | column -t
